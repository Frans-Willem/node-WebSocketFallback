Protocol:
	Open connection with extra GET parameters:
		fallback_transport	xhrlp
		xhrlp_type			connect
		xhrlp_protocol		protocol
		xhrlp_random			random string
		
Objects:
	var m=MultipartPuller(method,url,sendData);
	m.ondata=function(data) {};
	m.onclose=function(error) {}; error will be undefined for a normal or requested close
	m.close(); //Will also trigger .onClosed(undefined)
	
	function simpleRequest(method,url,sendData,callback);
	callback=function(err,text) {
		
	}

exports:
	createServer returns WebsocketServer
WebSocketServer:
	handleRequest(request,socket,head)
	event "request": WebSocketRequest, WebSocketResponse
	event "clientError"
WebSocketRequest:
v	.method
v	.url
v	.headers
v	.httpVersion
v	.connection
WebSocketResponse:
v	.writeHead(code,headers);
v	.accept(protocol,headers);
v	.write() //Will either send a WebSocket packet, or a simple HTTP packet
	.end();
	event "connect"
	event "data" (data)
	event "end" ()
	event "timeout"()
	event "drain" ()
	event "error"(exception)
	event "close"(had_error)
v	.remoteAddress
v	.readyState
	.destroy()
	.pause()
	.resume()
	.setTimeout()
	.setNoDelay()
	.setKeepAlive()
	.writeable
	.readable (should wire up with end event to be non-readable)
	.setEncoding